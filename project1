{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "3782bb66",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import sympy as sp\n",
    "import seaborn as sns\n",
    "import matplotlib as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d10b7b75",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price</th>\n",
       "      <th>size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>154282.128</td>\n",
       "      <td>479.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>281626.336</td>\n",
       "      <td>487.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>183459.488</td>\n",
       "      <td>518.38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>168047.264</td>\n",
       "      <td>525.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>191486.896</td>\n",
       "      <td>525.81</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        price    size\n",
       "0  154282.128  479.75\n",
       "1  281626.336  487.29\n",
       "2  183459.488  518.38\n",
       "3  168047.264  525.81\n",
       "4  191486.896  525.81"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_csv('housing_data.csv')\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "2cfa5a5d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>price</th>\n",
       "      <th>size</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>154282.128</td>\n",
       "      <td>479.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>281626.336</td>\n",
       "      <td>487.29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>183459.488</td>\n",
       "      <td>518.38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>168047.264</td>\n",
       "      <td>525.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>191486.896</td>\n",
       "      <td>525.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>454512.760</td>\n",
       "      <td>1496.36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>401255.608</td>\n",
       "      <td>1504.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>383635.568</td>\n",
       "      <td>1504.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>500681.128</td>\n",
       "      <td>1508.84</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>494778.992</td>\n",
       "      <td>1842.51</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         price     size\n",
       "0   154282.128   479.75\n",
       "1   281626.336   487.29\n",
       "2   183459.488   518.38\n",
       "3   168047.264   525.81\n",
       "4   191486.896   525.81\n",
       "..         ...      ...\n",
       "95  454512.760  1496.36\n",
       "96  401255.608  1504.75\n",
       "97  383635.568  1504.75\n",
       "98  500681.128  1508.84\n",
       "99  494778.992  1842.51\n",
       "\n",
       "[100 rows x 2 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d4729450",
   "metadata": {},
   "outputs": [],
   "source": [
    "x= np.concatenate((np.ones((len(data['size']),1)),np.array(data[['size']])),1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b42371e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1.00000e+00, 4.79750e+02],\n",
       "       [1.00000e+00, 4.87290e+02],\n",
       "       [1.00000e+00, 5.18380e+02],\n",
       "       [1.00000e+00, 5.25810e+02],\n",
       "       [1.00000e+00, 5.25810e+02],\n",
       "       [1.00000e+00, 5.49690e+02],\n",
       "       [1.00000e+00, 5.49800e+02],\n",
       "       [1.00000e+00, 5.49800e+02],\n",
       "       [1.00000e+00, 5.49800e+02],\n",
       "       [1.00000e+00, 5.69170e+02],\n",
       "       [1.00000e+00, 5.70250e+02],\n",
       "       [1.00000e+00, 5.70890e+02],\n",
       "       [1.00000e+00, 5.70890e+02],\n",
       "       [1.00000e+00, 5.75190e+02],\n",
       "       [1.00000e+00, 5.97900e+02],\n",
       "       [1.00000e+00, 6.01660e+02],\n",
       "       [1.00000e+00, 6.17050e+02],\n",
       "       [1.00000e+00, 6.20710e+02],\n",
       "       [1.00000e+00, 6.20820e+02],\n",
       "       [1.00000e+00, 6.22970e+02],\n",
       "       [1.00000e+00, 6.23940e+02],\n",
       "       [1.00000e+00, 6.33190e+02],\n",
       "       [1.00000e+00, 6.33190e+02],\n",
       "       [1.00000e+00, 6.43090e+02],\n",
       "       [1.00000e+00, 6.43090e+02],\n",
       "       [1.00000e+00, 6.43410e+02],\n",
       "       [1.00000e+00, 6.47500e+02],\n",
       "       [1.00000e+00, 6.47500e+02],\n",
       "       [1.00000e+00, 6.48290e+02],\n",
       "       [1.00000e+00, 6.56220e+02],\n",
       "       [1.00000e+00, 6.56220e+02],\n",
       "       [1.00000e+00, 6.81070e+02],\n",
       "       [1.00000e+00, 6.81070e+02],\n",
       "       [1.00000e+00, 6.81070e+02],\n",
       "       [1.00000e+00, 6.81070e+02],\n",
       "       [1.00000e+00, 6.81070e+02],\n",
       "       [1.00000e+00, 6.82260e+02],\n",
       "       [1.00000e+00, 6.82260e+02],\n",
       "       [1.00000e+00, 6.82260e+02],\n",
       "       [1.00000e+00, 6.85480e+02],\n",
       "       [1.00000e+00, 6.85480e+02],\n",
       "       [1.00000e+00, 6.85480e+02],\n",
       "       [1.00000e+00, 6.85480e+02],\n",
       "       [1.00000e+00, 6.85480e+02],\n",
       "       [1.00000e+00, 6.85480e+02],\n",
       "       [1.00000e+00, 6.90540e+02],\n",
       "       [1.00000e+00, 6.94520e+02],\n",
       "       [1.00000e+00, 6.94520e+02],\n",
       "       [1.00000e+00, 6.94520e+02],\n",
       "       [1.00000e+00, 6.94520e+02],\n",
       "       [1.00000e+00, 6.98290e+02],\n",
       "       [1.00000e+00, 6.98290e+02],\n",
       "       [1.00000e+00, 6.98290e+02],\n",
       "       [1.00000e+00, 6.98290e+02],\n",
       "       [1.00000e+00, 6.98290e+02],\n",
       "       [1.00000e+00, 6.98500e+02],\n",
       "       [1.00000e+00, 7.05290e+02],\n",
       "       [1.00000e+00, 7.27880e+02],\n",
       "       [1.00000e+00, 8.23210e+02],\n",
       "       [1.00000e+00, 8.23210e+02],\n",
       "       [1.00000e+00, 8.27090e+02],\n",
       "       [1.00000e+00, 8.27840e+02],\n",
       "       [1.00000e+00, 8.28160e+02],\n",
       "       [1.00000e+00, 8.57540e+02],\n",
       "       [1.00000e+00, 1.00925e+03],\n",
       "       [1.00000e+00, 1.00925e+03],\n",
       "       [1.00000e+00, 1.00925e+03],\n",
       "       [1.00000e+00, 1.01033e+03],\n",
       "       [1.00000e+00, 1.02195e+03],\n",
       "       [1.00000e+00, 1.02195e+03],\n",
       "       [1.00000e+00, 1.02195e+03],\n",
       "       [1.00000e+00, 1.02195e+03],\n",
       "       [1.00000e+00, 1.02195e+03],\n",
       "       [1.00000e+00, 1.02776e+03],\n",
       "       [1.00000e+00, 1.02841e+03],\n",
       "       [1.00000e+00, 1.03206e+03],\n",
       "       [1.00000e+00, 1.03744e+03],\n",
       "       [1.00000e+00, 1.06036e+03],\n",
       "       [1.00000e+00, 1.06036e+03],\n",
       "       [1.00000e+00, 1.07155e+03],\n",
       "       [1.00000e+00, 1.10330e+03],\n",
       "       [1.00000e+00, 1.12234e+03],\n",
       "       [1.00000e+00, 1.18346e+03],\n",
       "       [1.00000e+00, 1.18862e+03],\n",
       "       [1.00000e+00, 1.20562e+03],\n",
       "       [1.00000e+00, 1.20745e+03],\n",
       "       [1.00000e+00, 1.23693e+03],\n",
       "       [1.00000e+00, 1.27546e+03],\n",
       "       [1.00000e+00, 1.28385e+03],\n",
       "       [1.00000e+00, 1.30096e+03],\n",
       "       [1.00000e+00, 1.33410e+03],\n",
       "       [1.00000e+00, 1.33410e+03],\n",
       "       [1.00000e+00, 1.33410e+03],\n",
       "       [1.00000e+00, 1.37972e+03],\n",
       "       [1.00000e+00, 1.49636e+03],\n",
       "       [1.00000e+00, 1.49636e+03],\n",
       "       [1.00000e+00, 1.50475e+03],\n",
       "       [1.00000e+00, 1.50475e+03],\n",
       "       [1.00000e+00, 1.50884e+03],\n",
       "       [1.00000e+00, 1.84251e+03]])"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ac9ec23d",
   "metadata": {},
   "outputs": [],
   "source": [
    "y = np.array(data[['price']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f986df3f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[154282.128],\n",
       "       [281626.336],\n",
       "       [183459.488],\n",
       "       [168047.264],\n",
       "       [191486.896],\n",
       "       [171795.24 ],\n",
       "       [271726.752],\n",
       "       [211724.096],\n",
       "       [252460.4  ],\n",
       "       [251332.592],\n",
       "       [233493.208],\n",
       "       [265129.064],\n",
       "       [271793.312],\n",
       "       [245050.28 ],\n",
       "       [207742.248],\n",
       "       [211904.536],\n",
       "       [262423.504],\n",
       "       [268125.08 ],\n",
       "       [175716.48 ],\n",
       "       [302000.92 ],\n",
       "       [234178.16 ],\n",
       "       [204302.976],\n",
       "       [257828.416],\n",
       "       [234314.144],\n",
       "       [282683.544],\n",
       "       [181587.576],\n",
       "       [225656.12 ],\n",
       "       [255629.16 ],\n",
       "       [225145.248],\n",
       "       [228581.528],\n",
       "       [298926.496],\n",
       "       [225451.984],\n",
       "       [297760.44 ],\n",
       "       [225452.32 ],\n",
       "       [180307.216],\n",
       "       [190909.056],\n",
       "       [331101.344],\n",
       "       [217468.224],\n",
       "       [251560.04 ],\n",
       "       [292965.216],\n",
       "       [302393.384],\n",
       "       [294582.944],\n",
       "       [228313.024],\n",
       "       [286161.6  ],\n",
       "       [303597.216],\n",
       "       [248337.6  ],\n",
       "       [218630.608],\n",
       "       [215472.104],\n",
       "       [251140.656],\n",
       "       [298170.88 ],\n",
       "       [245747.2  ],\n",
       "       [300061.48 ],\n",
       "       [201778.048],\n",
       "       [266684.248],\n",
       "       [262477.856],\n",
       "       [263311.696],\n",
       "       [274922.856],\n",
       "       [269523.056],\n",
       "       [269225.92 ],\n",
       "       [287350.   ],\n",
       "       [304587.272],\n",
       "       [330677.128],\n",
       "       [251188.824],\n",
       "       [285223.176],\n",
       "       [418753.008],\n",
       "       [355251.2  ],\n",
       "       [376253.808],\n",
       "       [301635.728],\n",
       "       [310045.712],\n",
       "       [393069.76 ],\n",
       "       [258637.008],\n",
       "       [334938.872],\n",
       "       [276875.632],\n",
       "       [299416.976],\n",
       "       [327252.112],\n",
       "       [320345.52 ],\n",
       "       [310522.592],\n",
       "       [279555.096],\n",
       "       [293044.496],\n",
       "       [338078.168],\n",
       "       [362519.72 ],\n",
       "       [408637.816],\n",
       "       [382120.152],\n",
       "       [342988.456],\n",
       "       [359674.44 ],\n",
       "       [412569.472],\n",
       "       [354512.112],\n",
       "       [458674.256],\n",
       "       [395242.096],\n",
       "       [444192.008],\n",
       "       [406852.304],\n",
       "       [414682.648],\n",
       "       [365863.936],\n",
       "       [440201.616],\n",
       "       [368988.432],\n",
       "       [454512.76 ],\n",
       "       [401255.608],\n",
       "       [383635.568],\n",
       "       [500681.128],\n",
       "       [494778.992]])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "ad872771",
   "metadata": {},
   "outputs": [],
   "source": [
    "def linear_equation(x,y,array):\n",
    "    p = x.T @ x\n",
    "    p_inv =np.linalg.inv(p)\n",
    "    Q = x.T @ y\n",
    "    A = p_inv @ Q\n",
    "    eq = A[1] * array + A[0]\n",
    "    print (f'Your Linear Equation is : {A[1]}x + {A[0]}')\n",
    "    return eq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "e81b3395",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your Linear Equation is : [223.17874259]x + [101912.60180123]\n"
     ]
    }
   ],
   "source": [
    "best_fit_line = linear_equation(x, y, np.array(data['size']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "a7e8a9c2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='size', ylabel='price'>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lineplot(x = np.array(data['size']), y= best_fit_line,lw= 2)\n",
    "sns.scatterplot(data=data,x = 'size', y = 'price')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "e84c137e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your Linear Equation is : [223.17874259]x + [101912.60180123]\n",
      "[771448.82958505]\n"
     ]
    }
   ],
   "source": [
    "house_size = [3000]\n",
    "priict_price = linear_equation(x, y, house_size)\n",
    "print(priict_price)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5564202d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
